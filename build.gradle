/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    //PMD
    id 'pmd'
    //Code coverage
    id 'jacoco'
    //JavaFX
    id 'org.openjfx.javafxplugin' version '0.0.10'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    //jcenter()  to use if mavenCentral doesn't find dependencies
}

dependencies {

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'


    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'

    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.assertj:assertj-core:3.20.2'

    //Use derby as test database
    testImplementation 'org.apache.derby:derby:10.14.2.0'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1-jre'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'

    implementation 'org.apache.commons:commons-text:1.9'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.1'

    //https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.25'

}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

javafx {
    version = "17"
    modules = ['javafx.controls']
}

pmd {
    //To also display results in the console
    consoleOutput = true
    toolVersion = "6.21.0"
    ruleSetFiles = files("config/pmd/b2-ruleset.xml")
    //maxFailures = 100
    ignoreFailures = true //but don't forget to check the pmd results!
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

application {
    // Define the main class for the application.
    mainClass = 'org.helmo.gbeditor.App'
}

